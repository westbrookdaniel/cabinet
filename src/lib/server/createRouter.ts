import { renderForServer } from '@/lib/server/renderForServer.ts';
import { serveDir } from 'std/http/file_server.ts';
import { ModuleMap } from '@/lib/types.ts';
import { serveBundle } from '@/lib/server/serveBundle.ts';

export const createRouter = async (modules: ModuleMap) => {
    await generateModules();

    return async (req: Request): Promise<Response> => {
        if (req.method !== 'GET') {
            return new Response('Method not allowed', { status: 405 });
        }

        const url = new URL(req.url);

        if (url.pathname.startsWith('/public')) {
            return serveDir(req, { fsRoot: './public', urlRoot: 'public' });
        }

        if (url.pathname.startsWith('/bundle') && url.pathname.endsWith('.js')) {
            return serveBundle(url.pathname.replace('/bundle/', ''));
        }

        if (url.pathname === '/favicon.ico') {
            return new Response(null, { status: 404 });
        }

        const html = await renderForServer(modules, url);
        return new Response(new TextEncoder().encode(html));
    };
};

async function generateModules() {
    const importStr: string[] = [];
    const exportStr: string[] = [];
    for await (const dirEntry of Deno.readDir('./src/pages')) {
        if (!dirEntry.isFile) return;
        const name = dirEntry.name.replace('.tsx', '');
        importStr.push(`import _${name} from './src/pages/${name}.tsx';`);
        exportStr.push(`_${name}`);
    }

    const file = ` // This file is generated by src/lib/app.ts
${importStr.sort().join('\n')}

export const modules = {
    ${exportStr.sort().join(',\n    ')}
};
`;

    const currentFile = await Deno.readTextFile('./modules.gen.ts');
    const hasChanged = currentFile !== file;

    if (!hasChanged) return;

    try {
        await Deno.writeTextFile('./modules.gen.ts', file);
    } catch {
        console.log('Previous file: ' + file);
        console.log('Current file: ' + currentFile);
        throw new Error(
            'Runtime module generation is not supported on this platform. Please commit the generated file.',
        );
    }
}
