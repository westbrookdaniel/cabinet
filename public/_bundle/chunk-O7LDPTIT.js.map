{
  "version": 3,
  "sources": ["../../src/lib/traverse.ts", "../../src/lib/render.ts"],
  "sourcesContent": ["import type { Node } from '@/lib/types.ts';\n\nexport function traverse<N>(\n    children: string | N | (N | string)[],\n    handlers: {\n        node?: (child: Node, i?: number) => void;\n        // TODO: Type should be Child but not Node\n        // deno-lint-ignore no-explicit-any\n        string?: (child: any, i?: number) => void;\n        // TODO: Create handlers for all the other children types?\n    },\n) {\n    if (typeof children === 'string') {\n        handlers.string?.(children);\n    } else if (Array.isArray(children)) {\n        children.flat().forEach((child, i) => {\n            // TODO: Improve checking for if it's a node\n            if (typeof child === 'object') {\n                // deno-lint-ignore no-explicit-any\n                handlers.node?.(child as any, i);\n            } else {\n                // deno-lint-ignore no-explicit-any\n                handlers.string?.(child as any, i);\n            }\n        });\n    } else {\n        // deno-lint-ignore no-explicit-any\n        handlers.node?.(children as any);\n    }\n}\n", "import type { Node } from '@/lib/types.ts';\nimport { traverse } from '@/lib/traverse.ts';\n\n/**\n * Creates dom element from a node\n */\nexport function renderNode(\n    previousEl: HTMLElement | undefined,\n    node: Node,\n): HTMLElement {\n    // If it's a component call it's render function\n    if (typeof node.type === 'function') {\n        return renderNode(previousEl, node.type(node.attributes));\n    }\n\n    // TODO: Add optimisation around reusing dom elements\n    const el: HTMLElement = document.createElement(node.type);\n    previousEl?.replaceChildren(el);\n\n    applyAttributes(node, el);\n\n    const children = node.attributes.children;\n    const newChildren: (HTMLElement | Text)[] = [];\n    if (children) {\n        traverse(children, {\n            node: (child, i) => {\n                newChildren.push(renderNode(previousEl?.children[i ?? 0] as HTMLElement, child));\n            },\n            string: (child) => {\n                newChildren.push(document.createTextNode(child));\n            },\n        });\n    }\n    el.replaceChildren(...newChildren);\n\n    return el;\n}\n\n/**\n * Map of elements to their event listeners\n * TODO: Add some manual cleanup for listeners when the element is removed?\n */\nconst listenersInUse = new WeakMap<HTMLElement, [string, EventListenerOrEventListenerObject][]>();\n\n/**\n * Applies attributes of a node to a dom element\n */\nfunction applyAttributes(node: Node, el: HTMLElement) {\n    // Remove old listeners\n    if (listenersInUse.has(el)) {\n        const oldListeners = listenersInUse.get(el)!;\n        oldListeners.forEach(([eventType, listener]) => {\n            el.removeEventListener(eventType, listener);\n        });\n        // Remove from listeners in use\n        listenersInUse.delete(el);\n    }\n\n    // Apply attributes\n    // Any code that modifies the dom will be run too\n    Object.entries(node.attributes).forEach(([key, value]) => {\n        if (key === 'children') return;\n        if (value === undefined) return;\n        if (key.startsWith('on') && typeof value === 'function') {\n            const eventType = key.slice(2);\n            el.addEventListener(eventType, value as EventListener);\n\n            // Add to listeners in use for cleanup next time\n            if (!listenersInUse.has(el)) {\n                listenersInUse.set(el, [[eventType, value]]);\n            } else {\n                listenersInUse.get(el)!.push([eventType, value]);\n            }\n            return;\n        }\n        el.setAttribute(key, value);\n    });\n}\n"],
  "mappings": ";AAEO,SAAS,SACZ,UACA,UAOF;AACE,MAAI,OAAO,aAAa,UAAU;AAC9B,aAAS,SAAS,QAAQ;AAAA,EAC9B,WAAW,MAAM,QAAQ,QAAQ,GAAG;AAChC,aAAS,KAAK,EAAE,QAAQ,CAAC,OAAO,MAAM;AAElC,UAAI,OAAO,UAAU,UAAU;AAE3B,iBAAS,OAAO,OAAc,CAAC;AAAA,MACnC,OAAO;AAEH,iBAAS,SAAS,OAAc,CAAC;AAAA,MACrC;AAAA,IACJ,CAAC;AAAA,EACL,OAAO;AAEH,aAAS,OAAO,QAAe;AAAA,EACnC;AACJ;;;ACvBO,SAAS,WACZ,YACA,MACW;AAEX,MAAI,OAAO,KAAK,SAAS,YAAY;AACjC,WAAO,WAAW,YAAY,KAAK,KAAK,KAAK,UAAU,CAAC;AAAA,EAC5D;AAGA,QAAM,KAAkB,SAAS,cAAc,KAAK,IAAI;AACxD,cAAY,gBAAgB,EAAE;AAE9B,kBAAgB,MAAM,EAAE;AAExB,QAAM,WAAW,KAAK,WAAW;AACjC,QAAM,cAAsC,CAAC;AAC7C,MAAI,UAAU;AACV,aAAS,UAAU;AAAA,MACf,MAAM,CAAC,OAAO,MAAM;AAChB,oBAAY,KAAK,WAAW,YAAY,SAAS,KAAK,CAAC,GAAkB,KAAK,CAAC;AAAA,MACnF;AAAA,MACA,QAAQ,CAAC,UAAU;AACf,oBAAY,KAAK,SAAS,eAAe,KAAK,CAAC;AAAA,MACnD;AAAA,IACJ,CAAC;AAAA,EACL;AACA,KAAG,gBAAgB,GAAG,WAAW;AAEjC,SAAO;AACX;AAMA,IAAM,iBAAiB,oBAAI,QAAqE;AAKhG,SAAS,gBAAgB,MAAY,IAAiB;AAElD,MAAI,eAAe,IAAI,EAAE,GAAG;AACxB,UAAM,eAAe,eAAe,IAAI,EAAE;AAC1C,iBAAa,QAAQ,CAAC,CAAC,WAAW,QAAQ,MAAM;AAC5C,SAAG,oBAAoB,WAAW,QAAQ;AAAA,IAC9C,CAAC;AAED,mBAAe,OAAO,EAAE;AAAA,EAC5B;AAIA,SAAO,QAAQ,KAAK,UAAU,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACtD,QAAI,QAAQ;AAAY;AACxB,QAAI,UAAU;AAAW;AACzB,QAAI,IAAI,WAAW,IAAI,KAAK,OAAO,UAAU,YAAY;AACrD,YAAM,YAAY,IAAI,MAAM,CAAC;AAC7B,SAAG,iBAAiB,WAAW,KAAsB;AAGrD,UAAI,CAAC,eAAe,IAAI,EAAE,GAAG;AACzB,uBAAe,IAAI,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC;AAAA,MAC/C,OAAO;AACH,uBAAe,IAAI,EAAE,EAAG,KAAK,CAAC,WAAW,KAAK,CAAC;AAAA,MACnD;AACA;AAAA,IACJ;AACA,OAAG,aAAa,KAAK,KAAK;AAAA,EAC9B,CAAC;AACL;",
  "names": []
}
